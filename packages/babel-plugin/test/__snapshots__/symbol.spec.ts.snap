// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`transform custom symbol > should work with basic types 1`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(false);
__a.value = 1;"
`;

exports[`transform custom symbol > should work with basic types 2`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(true);
__a.value = 1;"
`;

exports[`transform custom symbol > should work with basic types 3`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(0);
__a.value = 1;"
`;

exports[`transform custom symbol > should work with basic types 4`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(1);
__a.value = 1;"
`;

exports[`transform custom symbol > should work with basic types 5`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(1);
__a.value = 1;"
`;

exports[`transform custom symbol > should work with basic types 6`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(123);
__a.value = 1;"
`;

exports[`transform custom symbol > should work with basic types 7`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(null);
__a.value = 1;"
`;

exports[`transform custom symbol > should work with basic types 8`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(undefined);
__a.value = 1;"
`;

exports[`transform custom symbol > should work with basic types 9`] = `
"import { useSignal as _useSignal$ } from "essor";
const __a = _useSignal$(NaN);
__a.value = 1;"
`;

exports[`transform symbol > should not work with add value symbol 1`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$([1]);
$a.value.push(2);"
`;

exports[`transform symbol > should work with array 1`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$([1, 2, 3]);
$a.value = 2;"
`;

exports[`transform symbol > should work with array 2`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$([1, {
  a: 1
}, 3, 4]);
$a.value = 2;"
`;

exports[`transform symbol > should work with array 3`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$([1, 2, 3, 4, 5]);
$a.value = 2;"
`;

exports[`transform symbol > should work with array index  1`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$([1]);
console.log($a.value[0]);"
`;

exports[`transform symbol > should work with basic types 1`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(false);
$a.value = 1;"
`;

exports[`transform symbol > should work with basic types 2`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(true);
$a.value = 1;"
`;

exports[`transform symbol > should work with basic types 3`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(0);
$a.value = 1;"
`;

exports[`transform symbol > should work with basic types 4`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(1);
$a.value = 1;"
`;

exports[`transform symbol > should work with basic types 5`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(1);
$a.value = 1;"
`;

exports[`transform symbol > should work with basic types 6`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(123);
$a.value = 1;"
`;

exports[`transform symbol > should work with basic types 7`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(null);
$a.value = 1;"
`;

exports[`transform symbol > should work with basic types 8`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(undefined);
$a.value = 1;"
`;

exports[`transform symbol > should work with basic types 9`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$(NaN);
$a.value = 1;"
`;

exports[`transform symbol > should work with const function transform useComputed 1`] = `
"import { useComputed as _useComputed$ } from "essor";
const $a = _useComputed$(() => 1);
$a.value = 2;"
`;

exports[`transform symbol > should work with const function transform useComputed 2`] = `
"import { useComputed as _useComputed$ } from "essor";
const $a = _useComputed$(a => a + 1);
$a.value = 2;"
`;

exports[`transform symbol > should work with import value 1`] = `
"import { $a } from 'a';
import { b } from 'b';
console.log($a.value, b);"
`;

exports[`transform symbol > should work with let function transform useComputed 1`] = `
"import { useSignal as _useSignal$ } from "essor";
let $a = _useSignal$(() => 1);
$a.value = 2;"
`;

exports[`transform symbol > should work with let function transform useComputed 2`] = `
"import { useSignal as _useSignal$ } from "essor";
let $a = _useSignal$(a => a + 1);
$a.value = 2;"
`;

exports[`transform symbol > should work with object 1`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$({
  a: 1
});
$a.value = 2;"
`;

exports[`transform symbol > should work with object 2`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$({
  a: 1,
  b: 2
});
$a.value = 2;"
`;

exports[`transform symbol > should work with object 3`] = `
"import { useSignal as _useSignal$ } from "essor";
const $a = _useSignal$({
  a: 1,
  b: {
    c: 1
  }
});
$a.value = 2;"
`;

exports[`transform symbol > should work with object pattern 1`] = `
"const {
  $a,
  b
} = {
  $a: 1,
  b: 2
};
const [$c, d] = [1, 2];
const [{
  $d,
  e
}] = [{
  $d: 1,
  e: 2
}];
console.log($a.value, b);
console.log($c.value, d);
console.log($d.value, e);"
`;

exports[`transform symbol > should work with object pattern alias 1`] = `
"const {
  a: $a,
  b
} = {
  a: 1,
  b: 2
};
const [{
  d: $d
}] = [{
  d: 1,
  e: 2
}];
console.log($a.value, b);
console.log($d.value);"
`;
